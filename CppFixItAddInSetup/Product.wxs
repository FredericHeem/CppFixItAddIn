<?xml version="1.0" encoding="UTF-8"?>
<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi" xmlns:util="http://schemas.microsoft.com/wix/UtilExtension">

    <?define PRODUCT_ID  = "7376E53A-02F5-4FCC-9700-7627077BE1D4" ?>
    <?define UPGRADE_CODE = "B43AA4EE-D256-4947-A0CB-B3EE72B9AB09" ?>
    <?define LICENSE_AGREEMENT_FILE_COMPONENT_GUID = "EA79D3C7-908D-45D8-B7F8-9205E0FD7A53" ?>
    <?define LICENSE_CLANG_COMPONENT_GUID = "87D14A11-AA3C-47AE-A222-02CFB0C47722" ?>
    <?define HELP_FILE_COMPONENT_GUID = "2DE9E37F-7C95-4DE4-A937-3DB0490716A2" ?>
    <?define HELP_FILE_SHORTCUT_COMPONENT_GUID = "390E0CF4-C563-4B36-B587-7BB6252DCAE9" ?>
    <!--<?define CPPFIXITUI_DLL_FILE_COMPONENT_GUID = "E6B1FD95-F090-43E7-9A56-6B9FD1F094F1" ?>-->
    <?define VS2010_DLL_FILE_COMPONENT_GUID = "BFEFF0A6-A965-4492-B1CD-118B3F30DCDD" ?>
    <?define VS2012_DLL_FILE_COMPONENT_GUID = "BF5B4F6D-B7BB-4484-828E-C99EB3EC1DBE" ?>
    <?define VS2010_ADDIN_FILE_COMPONENT_GUID = "26F80F0D-E64C-4389-AAE6-82E87809333E" ?>
    <?define VS2012_ADDIN_FILE_COMPONENT_GUID = "A3215D47-7277-48B4-AF21-98EA8D377FB3" ?>
    <?define CLANG_COMPONENT_GUID = "28BFDEE0-D74B-4B25-A6A0-58D6AD46543E" ?>
    
    <?define APP_NAME = "CppFixItAddIn" ?>
    <?define APP_VERSION = "1.0.0.0" ?>
    <?define DEFAULT_GROUP_NAME = "CppFixIt" ?>
    <?define HELP_SHORTCUT = "CppFixItAddin Help File" ?>

    <?define DEST_SUB_DIR = "CppFixIt" ?>
    <?define HELP_FILE_NAME = "README.txt" ?>
    <?define LICENSE_AGREEMENT_FILE_NAME = "license.rtf" ?>
    <?define CLANG_LICENSE_FILE_NAME = "ClangLicense.txt" ?>
    <!--<?define DLL_FILE_NAME_CPPFIXITUI = "CppFixItUi.dll" ?>-->
    <?define DLL_FILE_NAME_VS2010 = "CppFixItAddIn2010.dll" ?>
    <?define DLL_FILE_NAME_VS2012 = "CppFixItAddIn2012.dll" ?>
    <?define CLANG_EXE = "clang.exe" ?>
    <?define ADDIN_XML_FILE_NAME = "CppFixItAddIn.AddIn" ?>
    <?define MY_COMPANY_NAME = "CppFixIt" ?>
    <?define MY_COMPANY_WEB_SITE = "https://plus.google.com/u/0/b/101501448236380567839/101501448236380567839/about" ?>

    <!-- Ensure that these values are used for the Connect class -->
    <?define CONNECT_CLASS_FULL_NAME_VS_2010 = "CppFixItAddIn.Connect2010" ?>
    <!--TODO -->
    <?define CONNECT_CLASS_FULL_NAME_VS_2012 = "CppFixItAddIn.Connect2012" ?>

    <Product Id="$(var.PRODUCT_ID)"
             Name="$(var.APP_NAME)"
             Language="1033"
             Codepage="1252"
             Version="$(var.APP_VERSION)"
             Manufacturer="$(var.MY_COMPANY_NAME)"
             UpgradeCode="$(var.UPGRADE_CODE)">

        <!-- Define the package indicating that the installation is for "Just me", not "All users" -->
        <Package InstallScope="perUser" InstallerVersion="200" Compressed="yes" />

        <Media Id="1" Cabinet="media1.cab" EmbedCab="yes" />
        
        <Property Id="VS2010INSTALLATIONFOLDER" Secure="yes">
            <RegistrySearch Id="VS2010InstallationFolderRegistrySearchId" Type="raw"
                            Root="HKLM" Key="SOFTWARE\Microsoft\VisualStudio\10.0" Name="InstallDir"></RegistrySearch>
        </Property>

        <Property Id="VS2012INSTALLATIONFOLDER" Secure="yes">
            <RegistrySearch Id="VS2012InstallationFolderRegistrySearchId" Type="raw"
                            Root="HKLM" Key="SOFTWARE\Microsoft\VisualStudio\11.0" Name="InstallDir"></RegistrySearch>
        </Property>
        
        <Condition Message="This add-in requires Visual Studio 2005, 2008, 2010 or 2012.">
            Installed OR VS2005INSTALLATIONFOLDER OR VS2008INSTALLATIONFOLDER OR VS2010INSTALLATIONFOLDER OR VS2012INSTALLATIONFOLDER
        </Condition>

        <Directory Id="TARGETDIR" Name="SourceDir">

            <!-- Install the files in a subfolder of the AppDataFolder folder (CSIDL_APPDATA) -->
            <Directory Id="AppDataFolder">

                <Directory Id="INSTALLLOCATION" Name="$(var.DEST_SUB_DIR)">

                    <!-- Install the license agreement -->
                    <Component Id="LicenseAgreementFileComponentId" Guid="$(var.LICENSE_AGREEMENT_FILE_COMPONENT_GUID)">

                        <File Id="LicenseAgreementFileId" Name="$(var.LICENSE_AGREEMENT_FILE_NAME)" Vital="yes" DiskId="1"
                              Source="$(var.LICENSE_AGREEMENT_FILE_NAME)" />

                        <RegistryValue Root="HKCU" Key="Software\[Manufacturer]\[ProductName]\LicenseFile" Name="Installed"
                                       Type="integer" Value="1" KeyPath="yes"/>

                        <!-- Ensure that the folder is removed when uninstalling -->
                        <RemoveFolder Id="INSTALLLOCATION" On="uninstall"/>

                    </Component>

                    <!-- Install the clang license -->
                    <Component Id="ClangLicenseFileComponentId" Guid="$(var.LICENSE_CLANG_COMPONENT_GUID)">

                        <File Id="ClangLicenseFileFileId" Name="$(var.CLANG_LICENSE_FILE_NAME)" Vital="yes" DiskId="1"
                              Source="$(var.CLANG_LICENSE_FILE_NAME)" />

                        <RegistryValue Root="HKCU" Key="Software\[Manufacturer]\[ProductName]\LicenseClang" Name="Installed"
                                       Type="integer" Value="1" KeyPath="yes"/>

                        <!-- Ensure that the folder is removed when uninstalling -->
                        <!--<RemoveFolder Id="INSTALLLOCATION" On="uninstall"/>-->

                    </Component>

                    
                    <!-- Install the help file -->
                    <Component Id="HelpFileComponentId" Guid="$(var.HELP_FILE_COMPONENT_GUID)">

                        <File Id="HelpFileId" Name="$(var.HELP_FILE_NAME)" Vital="yes" DiskId="1" Source="$(var.HELP_FILE_NAME)" />
                        <RegistryValue Root="HKCU" Key="Software\[Manufacturer]\[ProductName]\HelpFile" Name="Installed" Type="integer"
                                       Value="1" KeyPath="yes"/>

                    </Component>

                    <Directory Id="bin" Name="bin">
                        <!-- Install clang -->
                        <Component Id="ClangFileComponentId" Guid="$(var.CLANG_COMPONENT_GUID)">
                            <File Id="ClangFileFileId" Name="$(var.CLANG_EXE)" Vital="yes" DiskId="1" Source="$(var.CLANG_EXE)" />
                            <RegistryValue Root="HKCU" Key="Software\[Manufacturer]\[ProductName]\ClangFile" Name="Installed" Type="integer"
                                           Value="1" KeyPath="yes"/>

                            <!-- Ensure that the folder is removed when uninstalling -->
                            <RemoveFolder Id="ClangFileComponentId" On="uninstall"/>
                        </Component>

                    </Directory>

                  <!-- Install the dll file of the ui -->
                  <!--<Component Id="VSCppFixItUiDllFileComponentId" Guid="$(var.CPPFIXITUI_DLL_FILE_COMPONENT_GUID)">
                    <File Id="VSCppFixItUiDllFileId" Name="$(var.DLL_FILE_NAME_CPPFIXITUI)" Vital="yes" DiskId="1" Source="$(var.DLL_FILE_NAME_CPPFIXITUI)" />
                    <RegistryValue Root="HKCU" Key="Software\[Manufacturer]\[ProductName]\VSCppFixItUiDllFileId" Name="Installed" Type="integer"
                                   Value="1" KeyPath="yes"/>
                  </Component>-->

                  <!-- Install the dll file of the add-in for Visual Studio 2010 -->
                    <Component Id="VS2010DllFileComponentId" Guid="$(var.VS2010_DLL_FILE_COMPONENT_GUID)">
                        <File Id="VS2010DllFileId" Name="$(var.DLL_FILE_NAME_VS2010)" Vital="yes" DiskId="1" Source="$(var.DLL_FILE_NAME_VS2010)" />
                        <RegistryValue Root="HKCU" Key="Software\[Manufacturer]\[ProductName]\VS2010DllFile" Name="Installed" Type="integer"
                                       Value="1" KeyPath="yes"/>
                    </Component>

                  <!-- Install the dll file of the add-in for Visual Studio 2012 -->
                  
                    <Component Id="VS2012DllFileComponentId" Guid="$(var.VS2012_DLL_FILE_COMPONENT_GUID)">
                        <File Id="VS2012DllFileId" Name="$(var.DLL_FILE_NAME_VS2012)" Vital="yes" DiskId="1" Source="$(var.DLL_FILE_NAME_VS2012)" />
                        <RegistryValue Root="HKCU" Key="Software\[Manufacturer]\[ProductName]\VS2012DllFile" Name="Installed" Type="integer"
                                       Value="1" KeyPath="yes"/>

                    </Component>
                </Directory>

               
                <Directory Id="MicrosoftDirId" Name="Microsoft">
                    <Component Id="UninstallMSDir" Guid="3AEE8422-A8D1-4EEB-B1EE-B96283C24ED4">
                        <RegistryValue Root="HKCU" Key="Software\[Manufacturer]\[ProductName]\UninstallMSDir" Name="Installed" Type="integer"
                                   Value="1" KeyPath="yes"/>
                        <RemoveFolder Id="UninstallMSDIr" On ="uninstall"/>
                    </Component>
                    
                    <Directory Id="VisualStudioDirId" Name="VisualStudio">
                        <Component Id="UninstallVSDir" Guid="F4761C9F-7D03-4AC6-AB1E-843B89B25564">
                            <RegistryValue Root="HKCU" Key="Software\[Manufacturer]\[ProductName]\UninstallVSDi" Name="Installed" Type="integer"
                                     Value="1" KeyPath="yes"/>
                            <RemoveFolder Id="UninstallVSDir" On ="uninstall"/>
                        </Component>
                        <Directory Id="Dir100Id" Name="10.0">
                            <Component Id="UninstallDir100Id" Guid="C55597B3-8D10-482F-B0A3-7C1693FFFCC7">
                                <RegistryValue Root="HKCU" Key="Software\[Manufacturer]\[ProductName]\UninstallDir100Id" Name="Installed" Type="integer"
                                       Value="1" KeyPath="yes"/>
                                <RemoveFolder Id="UninstallDir100Id" On ="uninstall"/>
                            </Component>
                            <Directory Id="Dir100AddInsId" Name="AddIns">

                                <Component Id="VS2010AddInFileComponentId" Guid="$(var.VS2010_ADDIN_FILE_COMPONENT_GUID)">
                                    <File Id="VS2010AddInFileId" Name="$(var.ADDIN_XML_FILE_NAME)" Vital="yes" DiskId="1"
                                          Source="$(var.ADDIN_XML_FILE_NAME)" />

                                    <util:XmlFile Id="VS2010SetVersionElement" Action="setValue" File="[#VS2010AddInFileId]"
                                                  ElementPath="/Extensibility/HostApplication/Version" Value="10.0" Sequence="1" />

                                    <util:XmlFile Id="VS2010SetAssemblyElement" Action="setValue" File="[#VS2010AddInFileId]"
                                                  ElementPath="/Extensibility/Addin/Assembly" Value="[#VS2010DllFileId]" Sequence="1" />

                                    <util:XmlFile Id="VS2010SetFullClassNameElement" Action="setValue" File="[#VS2010AddInFileId]"
                                                  ElementPath="/Extensibility/Addin/FullClassName"
                                                  Value="$(var.CONNECT_CLASS_FULL_NAME_VS_2010)" Sequence="1" />
                                    
                                    <RegistryValue Root="HKCU" Key="Software\[Manufacturer]\[ProductName]\VS2010AddInFile" Name="Installed"
                                                   Type="integer" Value="1" KeyPath="yes"/>

                                    <RemoveFolder Id="Dir100Id"  On="uninstall"/>
                                    
                                </Component>

                            </Directory>

                        </Directory>

                        <Directory Id="Dir11Id" Name="11.0">
                            <Component Id="UninstallDir101Id" Guid="70B4E029-EF4E-45AA-A393-7E3B6CDC9BC2">
                                <RegistryValue Root="HKCU" Key="Software\[Manufacturer]\[ProductName]\UninstallDir101Id" Name="Installed" Type="integer"
                                       Value="1" KeyPath="yes"/>
                                <RemoveFolder Id="UninstallDir101Id" On ="uninstall"/>
                            </Component>
                            <Directory Id="Dir11AddInsId" Name="AddIns">

                                <Component Id="VS2012AddInFileComponentId" Guid="$(var.VS2012_ADDIN_FILE_COMPONENT_GUID)">

                                    <File Id="VS2012AddInFileId" Name="$(var.ADDIN_XML_FILE_NAME)" Vital="yes" DiskId="1"
                                          Source="$(var.ADDIN_XML_FILE_NAME)" />

                                    <util:XmlFile Id="VS2012SetVersionElement" Action="setValue" File="[#VS2012AddInFileId]"
                                                  ElementPath="/Extensibility/HostApplication/Version" Value="11.0" Sequence="1" />

                                    <util:XmlFile Id="VS2012SetAssemblyElement" Action="setValue" File="[#VS2012AddInFileId]"
                                                  ElementPath="/Extensibility/Addin/Assembly" Value="[#VS2012DllFileId]" Sequence="1" />

                                    <util:XmlFile Id="VS2012SetFullClassNameElement" Action="setValue" File="[#VS2012AddInFileId]"
                                                  ElementPath="/Extensibility/Addin/FullClassName"
                                                  Value="$(var.CONNECT_CLASS_FULL_NAME_VS_2012)" Sequence="1" />

                                    <RegistryValue Root="HKCU" Key="Software\[Manufacturer]\[ProductName]\VS2012AddInFile" Name="Installed"
                                                   Type="integer" Value="1" KeyPath="yes"/>

                                    <RemoveFolder Id="VS2012AddInFileComponentId"  On="uninstall"/>
                                    
                                </Component>

                            </Directory>

                        </Directory>
                    </Directory>

                </Directory>

            </Directory>

            <!-- Install the shortcuts to the help file, web site and uninstaller in the  
              ProgramMenuFolder folder, that for an installation for the current user like this maps to CSIDL_PROGRAMS
         -->
            <Directory Id="ProgramMenuFolder">

                <Directory Id="AddInStartMenuFolderId" Name="$(var.DEFAULT_GROUP_NAME)">

                    <Component Id="HelpFileShortcutComponentId" Guid="$(var.HELP_FILE_SHORTCUT_COMPONENT_GUID)">

                        <!-- Create the shortcut to the help file -->
                        <Shortcut Id="HelpFileShortcutId" Name="$(var.APP_NAME)" Description="$(var.APP_NAME)"
                                  Target="[INSTALLLOCATION]$(var.HELP_FILE_NAME)" WorkingDirectory="INSTALLLOCATION"/>

                        <!-- Create the shortcut to the web site -->
                        <util:InternetShortcut Id="WebSiteShortcutId" Name="$(var.MY_COMPANY_NAME) Web Site"
                                               Target="$(var.MY_COMPANY_WEB_SITE)" />

                        <!-- Create the shorcut to the uninstaller -->
                        <Shortcut Id="UninstallProduct" Name="Uninstall $(var.APP_NAME)" Target="[SystemFolder]msiexec.exe"
                            Arguments="/x [ProductCode]" Description="Uninstalls $(var.APP_NAME)" />

                        <!-- Ensure that the folder is removed when uninstalling -->
                        <RemoveFolder Id="AddInStartMenuFolderId" On="uninstall"/>
                       
                        <RegistryValue Root="HKCU" Key="Software\[Manufacturer]\[ProductName]\HelpFileShortcut" Name="Installed"
                                       Type="integer" Value="1" KeyPath="yes"/>

                    </Component>

                </Directory>

            </Directory>

        </Directory>

        <!-- Create the tree of features of the setup:
           - A root feature that is always shown (Level=1), expanded, mandatory (can't be absent)
             and that can't be installed on first use (that is, can't be advertised)
           - 3 child optional features
      -->
        <Feature Id="VSCommonFeatureId" Title="$(var.APP_NAME)" Level="1" AllowAdvertise="no"
                 Description="Common files of the add-in." Display="expand" Absent="disallow">

            <!-- The root feature includes the license agreement, the help file and its shortcut  -->
            <ComponentRef Id="LicenseAgreementFileComponentId" />
            <ComponentRef Id="ClangLicenseFileComponentId" />
            <ComponentRef Id="HelpFileComponentId" />
            <ComponentRef Id="HelpFileShortcutComponentId" />
            <ComponentRef Id="ClangFileComponentId" />
            

            <!-- This child feature is the add-in for Visual Studio 2010 -->
            <Feature Id="VS2010InstallationFeatureId" Title="Visual Studio 2010"
                     Description="Installs the add-in for Visual Studio 2010." Level="1" AllowAdvertise="no">
                <Condition Level="0">NOT Installed AND NOT VS2010INSTALLATIONFOLDER</Condition>
              
                <!--<ComponentRef Id="VSCppFixItUiDllFileComponentId" />-->
                <ComponentRef Id="VS2010DllFileComponentId" />
                <ComponentRef Id="VS2010AddInFileComponentId" />
            </Feature>

            <Feature Id="VS2012InstallationFeatureId" Title="Visual Studio 2012"
                 Description="Installs the add-in for Visual Studio 2012." Level="1" AllowAdvertise="no">
                <Condition Level="0">NOT Installed AND NOT VS2012INSTALLATIONFOLDER</Condition>
                <!--<ComponentRef Id="VSCppFixItUiDllFileComponentId" />-->
                <ComponentRef Id="VS2012DllFileComponentId" />
                <ComponentRef Id="VS2012AddInFileComponentId" />

                <ComponentRef Id="UninstallMSDir" />
                <ComponentRef Id="UninstallVSDir" />
                <ComponentRef Id="UninstallDir100Id" />
                <ComponentRef Id="UninstallDir101Id" />
            </Feature>        
        </Feature>

        <!-- Custom action to remove the commands of Visual Studio 2010 when uninstalling the add-in -->

        <CustomAction Id="RemoveVS2010AddInCommands" Script="vbscript" Execute="deferred" Return="ignore">
            <![CDATA[
            Set dte = CreateObject("VisualStudio.DTE.10.0")
            For Each cmd In dte.Commands
               If InStr(cmd, "$(var.CONNECT_CLASS_FULL_NAME_VS_2010)") <> 0 Then
                  cmd.Delete()
               End If
            Next
            dte.Quit()
         ]]>
        </CustomAction>
        
        <CustomAction Id="RemoveVS2012AddInCommands" Script="vbscript" Execute="deferred" Return="ignore">
            <![CDATA[
            Set dte = CreateObject("VisualStudio.DTE.11.0")
            For Each cmd In dte.Commands
               If InStr(cmd, "$(var.CONNECT_CLASS_FULL_NAME_VS_2012)") <> 0 Then
                  cmd.Delete()
               End If
            Next
            dte.Quit()
         ]]>
        </CustomAction>

        <InstallExecuteSequence>

            <Custom Action="RemoveVS2010AddInCommands"
                    After="RemoveFiles">
                Installed AND NOT UPGRADINGPRODUCTCODE AND VS2010INSTALLATIONFOLDER
                AND !VS2010InstallationFeatureId=3
            </Custom>

            <Custom Action="RemoveVS2012AddInCommands"
                    After="RemoveFiles">
                Installed AND NOT UPGRADINGPRODUCTCODE AND VS2012INSTALLATIONFOLDER
                AND !VS2012InstallationFeatureId=3
            </Custom>
        </InstallExecuteSequence>

        <!-- Use the built-in User interface of the WixUIExtension reference that shows a treeview with features -->
        <UIRef Id="WixUI_FeatureTree" />

        <!-- Includes a license agreement step in the setup -->
        <WixVariable Id="WixUILicenseRtf" Value="$(var.LICENSE_AGREEMENT_FILE_NAME)"/>

    </Product>

</Wix>